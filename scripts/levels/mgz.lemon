//# address-hook(0x025d9c) end(0x025ea0)
function void fn025d9c()
{
	D1.u16 = 0x1b
	D2.u16 = 0x10
	D4.u16 = objA0.position.x.u16
	A2 = 0x025f0e
	fn01dd0e()

	D6 = (D6 << 16) + (D6 >> 16)
	D6.u16 &= 0x33
	if (D6.u16 != 0)
	{
		D0.u8 = D6.u8 & 0x11
		if (D0.u8 != 0)
		{
			A1 = 0xffffb000
			if (objA1.state == char.state.SPINDASH || objA1.state == char.state.RUNNING)
			{
				u16[A0 + 0x30] = 0x3c
				u8[A0 + 0x32] = 1
				D0.u8 = (u8[A1 + 0x2a] + objA0.flags2a) & 0x01
				if (D0.u8 == 0)
				{
					u8[A0 + 0x32] = 0xff
				}
			}
		}

		D6.u8 &= 0x22
		if (D6.u8 != 0)
		{
			A1 = 0xffffb04a
			if (objA1.state == char.state.SPINDASH || objA1.state == char.state.RUNNING)
			{
				u16[A0 + 0x30] = 0x3c
				u8[A0 + 0x32] = 1
				D0.u8 = (u8[A1 + 0x2a] + objA0.flags2a) & 0x01
				if (D0.u8 == 0)
				{
					u8[A0 + 0x32] = 0xff
				}
			}
		}
	}

	if (u16[A0 + 0x30] != 0)
	{
		D0.u16 = objA0.subtype2c & 0x0f
		A3 = 0xfffff7e0 + D0.s16

		--u16[A0 + 0x30]
		if (u16[A0 + 0x30] == 0)
		{
			u8[A3] = 0
			objA0.animation.sprite = 0
		}
		else
		{
			u8[A3] = 1
			if (objA0.flags2a & 0x08)
			{
				A1 = 0xffffb000
				fn025ea6()
			}
			if (objA0.flags2a & 0x10)
			{
				A1 = 0xffffb04a
				fn025ea6()
			}

			--objA0.animation.timer
			if (s8(objA0.animation.timer) < 0)
			{
				objA0.animation.timer = 1
				u8[A0 + 0x1d] = (u8[A0 + 0x1d] + u8[A0 + 0x32]) & 0x03
			}
			objA0.animation.sprite = (objA0.animation.sprite != 0) ? 0 : 4
		}
	}

	DrawOrUnloadObject()
}