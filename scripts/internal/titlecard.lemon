//Classic
global bool runawaydododo //When to move
global u16 topbluex //Take a guess
global u16 topbluey
global u8 bgop //op

//Modern
global u8 modernbary
global u8 modernbarx
global bool moderndonemove
global bool everyotherframe

function bool Standalone.onWriteToSpriteTable(s16 px, s16 py, u16 renderQueue)
{
	// This function gets called once when rendering an object, even if it consists of multiple VDP sprites
	//  -> That is in contrast to e.g. "Standalone.onDrawVdpSprite" which gets called for each VDP sprite
	//  -> So if an object's sprites should be replaced with a new loaded graphics, this here is the place to go
	if (VisualTitleCardTheme == 1)
	{
		// Title card red bar
		if (objA0.update_address == 0x02d8e2)
		{
			if (topbluex != 0)
			{
				topbluex -= 0x30
			}

			if (runawaydododo)
			{
				topbluey += 0x15
				bgop -= 15
			}

			Renderer.drawCustomSprite("topblue", px - 0x20 - topbluex, 0x00 - topbluey, 0x00, SPRITE_FLAG_PRIO | SPRITE_FLAG_NO_GLOBAL_TINT, renderQueue)
			Renderer.drawCustomSprite("botred", px - 0x20 + topbluex, 0x00 + topbluey, 0x00, SPRITE_FLAG_PRIO | SPRITE_FLAG_NO_GLOBAL_TINT, renderQueue)
			Renderer.drawCustomSprite("bg", px - 0x20, 0x00, 0x00, SPRITE_FLAG_PRIO | SPRITE_FLAG_NO_GLOBAL_TINT, renderQueue, 0, bgop)

			return true
		}
	}
	else
	{
		//Modern title card
		if (objA0.update_address == 0x02d8e2)
		{
			if (runawaydododo)
			{
				modernbary += 0x05
			}

			modernbarx += 0x01
			everyotherframe = 0

			s8 bottombary = modernbary - 0x0f //s8 because negative

			Renderer.drawCustomSprite("moderntcyop", 0x00 + modernbarx, 0x00 - modernbary, 0x00, SPRITE_FLAG_PRIO | SPRITE_FLAG_NO_GLOBAL_TINT, renderQueue)

			Renderer.drawCustomSprite("moderntcbottom", 0x00 - modernbarx, 0x00 + bottombary, 0x00, SPRITE_FLAG_PRIO | SPRITE_FLAG_NO_GLOBAL_TINT, renderQueue)
			return true
		}
	}

	//MHZ 1 Boss
	if (objA0.update_address == 0x0751ca || objA0.update_address == 0x085668 && global.zone == 0x07 && global.act.apparent == 0 || objA0.update_address == 0x075e84 && global.zone == 0x07 && global.act.apparent == 0) // Hey Ho
	{
		u64 key = stringformat("boss_mhz1_0x%02x", char.animation.sprite)
		u64 key2 = "boss_mhz1_pole"
		Renderer.drawCustomSprite(key, px, py, 0x00, objA0.render_flags, renderQueue)
		Renderer.drawCustomSprite(key2, px, py, 0x00, objA0.render_flags, renderQueue)
		return true
	}
	if (u32[A0 + 0x30] == 0x075f1c) // head
	{
		u64 key = "boss_mhz1_0x1A" // doesn't seem to draw right for some reason without doing it like this
		Renderer.drawCustomSprite(key, px, py, 0x00, objA0.render_flags, renderQueue)

		return true
	}
	if (objA0.update_address == 0x075a94) && (u8[A0 + 0x42] != 0x05) // Tree
	{
		u64 key = "boss_mhz1_tree" // doesn't seem to draw right for some reason without doing it like this
		Renderer.drawCustomSprite(key, px, py, 0x00, objA0.render_flags, renderQueue)

		return true
	}	
	if (objA0.update_address == 0x075b34) // Log
	{
		u64 key = stringformat("boss_mhz1_log_0x%02x", char.animation.sprite)
		Renderer.drawCustomSprite(key, px, py, 0x00, objA0.render_flags, renderQueue)

		return true
	}
	if (objA0.update_address == 0x0759d0) // Exaust
	{
		u64 key = stringformat("boss_mhz1_0x%02x", char.animation.sprite)
		Renderer.drawCustomSprite(key, px, py, 0x00, objA0.render_flags, renderQueue)
		return true
	}
	// Explosion of bosses
	if (u32[A0 + 0x0c] == 0x083ffc)
	{
		u64 key = stringformat("boss_explosion_0x%02x", char.animation.sprite)
		Renderer.drawCustomSprite(key, px, py, 0x00, objA0.render_flags, renderQueue)
		return true
	}
	return base.Standalone.onWriteToSpriteTable(px, py, renderQueue)
}

//# address-hook(0x02d8e2) end(0x02d926)
function void TitleCard.RedBarElement.Update()
{
	if (VisualTitleCardTheme == 1)
	{
		A1 = 0xffff0000 + u16[A0 + 0x48]
		D0.u16 = u16[A1 + 0x32]
		if (D0.u16 != 0)
		{
			// Disappearing
			if (topbluey > 0xcc)
			{
				--u16[A1 + 0x30]
				UnloadObject()
				return
			}

			if (D0.u8 >= u8[A0 + 0x28])
			{
				runawaydododo = 1
			}
		}
		else
		{
			// Appearing or showing
			if (objA0.position.y.u16 != u16[A0 + 0x46])
			{
				objA0.position.y.u16 += 0x10
				u8[A1 + 0x34] = 0xff
			}
		}

		objA0.box_size.y = 0x70
		DrawObject()
	}
	else
	{
		A1 = 0xffff0000 + u16[A0 + 0x48]
		D0.u16 = u16[A1 + 0x32]
		if (D0.u16 != 0)
		{
			// Disappearing
			if (modernbary >= 0x10)
			{
				--u16[A1 + 0x30]
				UnloadObject()
				return
			}

			if (D0.u8 >= u8[A0 + 0x28])
			{
				runawaydododo = 1
			}
		}
		else
		{
			// Appearing or showing
			if (objA0.position.y.u16 != u16[A0 + 0x46])
			{
				objA0.position.y.u16 += 0x10
				u8[A1 + 0x34] = 0xff
			}
		}

		objA0.box_size.y = 0x70
		DrawObject()
	}
}

//# address-hook(0x02d6a6) end(0x02d768)
function void TitleCard.Init()
{
	runawaydododo = 0
	topbluex = 0x90
	topbluey = 0
	bgop = 255
	moderndonemove = 0
	modernbarx = 0
	modernbary = 0

	if (global.zone_act == 0x0d01)
	{
		UnloadObject()
		return
	}
	else if (global.zone >= 0x0e && global.zone <= 0x12)
	{
		u8[A0 + 0x45] = 0xff
		UnloadObject()
		return
	}

	Kosinski.addToDMAQueue(0x0d6f28, 0xa000)

	A1 = (global.lock_on_state == 0) ? 0x15c3a2 : 0x15c2e0
	Kosinski.addToDMAQueue(A1, 0xa200)

	A1 = 0x0d6e46
	if (global.zone_act != 0x1600 && global.zone_act != 0x1700 && global.act.apparent == 0)
	{
		A1 = 0x0d6d84
	}
	Kosinski.addToDMAQueue(A1, 0xa7a0)

	A1 = 0x02da16
	D0 = global.zone.apparent
	if (global.zone_act == 0x1600)
	{
		D0 = 9
	}
	else if (global.zone_act == 0x1601)
	{
		D0 = 13
	}
	else if (global.zone_act == 0x1700)
	{
		D0 = 11
	}

	A1 = u32[A1 + D0.u16 * 4]
	Kosinski.addToDMAQueue(A1, 0xa9a0)

	objA0.countdown_value = 0x5a
	objA0.value32 = 0
	u8[A0 + 0x48] = 0xff
	objA0.base_state += 2
}